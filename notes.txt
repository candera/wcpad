TODO: 
* Fix problem with spaces in path in copy-dependencies.cmd
* Get rudimentary on-screen position stuff working
* Loading of custom image
* Printing of border with custom image and barcode
* Fix problem where mouse up outside of borders does not register with viewmodel
* Add unit tests
* Add support for map orientation detection
* Add support for multiple maps
  * Pad barcode
  * Calculation of fingertip location per-map
* Performance measurement
  
DEFER:
* Fix x64 build. Probably need to get an x64 build of openCV

DONE:
* Add drawing of regions: a mouse moving while down adds a region until mouse up
* Build to x86 and x64 directories - look at what VS does


Conversation with Ian: 

* The approach that ScottHanselman is taking is the wrong one. 
* The View should just be a projection of whatever your model. 
* Might make sense to have a ViewModel (aka Presenter). 
* Observable collection with one object per rectangle
  * ItemsControl
  * ItemsPanelTemplate (ItemsPanel) with a Canvas
  * That'll let me position the things in there based on the data
  * Slightly complicated because there are extra stuff in the visual tree
  * ItemsControl.ItemContainerStyle lets me define a style that lets me define
    binding properties on the item itself
  * DataBinding lab has an example
  * Define methods for mouse down and up on ViewModel/Presenter, which will
    then add new rectangles. 
  * For tracking active rectangles, use the same approach: have the ViewModel 
    deal with the mouse up/down
